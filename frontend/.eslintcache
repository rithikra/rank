[{"/Users/nikdev/Desktop/rank/frontend/src/index.js":"1","/Users/nikdev/Desktop/rank/frontend/src/App.js":"2","/Users/nikdev/Desktop/rank/frontend/src/reportWebVitals.js":"3","/Users/nikdev/Desktop/rank/frontend/src/components/Navbar.js":"4","/Users/nikdev/Desktop/rank/frontend/src/components/Ranking.js":"5","/Users/nikdev/Desktop/rank/frontend/src/components/Home.js":"6"},{"size":542,"mtime":1607234670830,"results":"7","hashOfConfig":"8"},{"size":950,"mtime":1607731392521,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1607209073711,"results":"10","hashOfConfig":"8"},{"size":917,"mtime":1607235168924,"results":"11","hashOfConfig":"8"},{"size":7949,"mtime":1607672901130,"results":"12","hashOfConfig":"8"},{"size":814,"mtime":1607751180482,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"ndbqda",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/nikdev/Desktop/rank/frontend/src/index.js",[],["31","32"],"/Users/nikdev/Desktop/rank/frontend/src/App.js",["33","34"],"import React, { Component } from 'react';\n\nimport logo from './logo.svg';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport NavBar from './components/Navbar';\nimport Home from './components/Home';\nimport Ranking from './components/Ranking'\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <div>\n      <NavBar></NavBar>\n      <Router>\n      <div>\n        <Switch>\n          <Route path=\"/about\">\n            <h2>About</h2>\n          </Route>\n          <Route path=\"/ranking\">\n            <Ranking></Ranking>\n          </Route>\n          <Route path='/internshipMatching'>\n            <h2>Internship Matching</h2>\n          </Route>\n          <Route path=\"/\">\n            <Home></Home>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n    </div>\n    );\n  }\n  return\n}\n\n\n\nexport default App;\n","/Users/nikdev/Desktop/rank/frontend/src/reportWebVitals.js",[],"/Users/nikdev/Desktop/rank/frontend/src/components/Navbar.js",["35","36"],"import React, { Component } from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\n\nclass NavBar extends React.Component {\n    state = {};\n    render() {\n      return (\n        <Navbar bg=\"dark\" variant=\"dark\"expand=\"lg\" >\n            <Navbar.Brand href=\"/\">rank.fyi</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"/\">Home</Nav.Link>\n                    <Nav.Link href=\"/ranking\">Ranking</Nav.Link>\n                    <Nav.Link href=\"/internshipMatching\">Internship Matching</Nav.Link>\n                    <Nav.Link href=\"/about\">About</Nav.Link>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n      );\n    }\n}\n\nexport default NavBar","/Users/nikdev/Desktop/rank/frontend/src/components/Ranking.js",["37"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\n\nclass Ranking extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            count: -1,\n            company1: {\n                _id: 0,\n                company_name: \"\",\n                company_logo: \"\",\n                company_information: \"\",\n                company_traits: \"\",\n                company_eloscore: 0,\n                company_ranking: 0,\n                past_rankings: []\n            },\n            company2: {\n                _id: 0,\n                company_name: \"\",\n                company_logo: \"\",\n                company_information: \"\",\n                company_traits: \"\",\n                company_eloscore: 0,\n                company_ranking: 0,\n                past_rankings: []\n            },\n        };\n        this.getRandomIntInclusive = this.getRandomIntInclusive.bind(this);\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.generateRandomNumbers = this.generateRandomNumbers.bind(this);\n        this.addCompanies = this.addCompanies.bind(this);\n        this.probability = this.probability.bind(this);\n        this.eloScore = this.eloScore.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n    }\n    componentDidMount() {\n        //get number of companies\n        axios.get('http://localhost:4000/company/count')\n            .then(response => {\n                this.setState({ count: response.data });\n            })\n            .catch(function (error){\n                console.log(error);\n        })\n\n        //initialize company1 and 2\n        axios.get('http://localhost:4000/company/1')\n            .then(response => {\n                let currCompany = response.data;\n                this.setState({\n                    company1: {\n                        _id: currCompany._id,\n                        company_name: currCompany.company_name,\n                        company_logo: currCompany.company_logo,\n                        company_information: currCompany.company_information,\n                        company_traits: currCompany.company_traits,\n                        company_eloscore: currCompany.company_eloscore,\n                        company_ranking: currCompany.company_ranking,\n                        past_rankings: currCompany.past_rankings\n                    }\n                });\n            })\n            .catch(function (error){\n                console.log(error);\n        })\n        axios.get('http://localhost:4000/company/2')\n            .then(response => {\n                let currCompany = response.data;\n                this.setState({\n                    company2: {\n                        _id: currCompany._id,\n                        company_name: currCompany.company_name,\n                        company_logo: currCompany.company_logo,\n                        company_information: currCompany.company_information,\n                        company_traits: currCompany.company_traits,\n                        company_eloscore: currCompany.company_eloscore,\n                        company_ranking: currCompany.company_ranking,\n                        past_rankings: currCompany.past_rankings\n                    }\n                });\n            })\n            .catch(function (error){\n                console.log(error);\n        })\n    }\n\n    addCompanies(count) {\n        let arr = this.generateRandomNumbers(1, count);\n        console.log(arr);\n        axios.get('http://localhost:4000/company/' + arr[0])\n            .then(response => {\n                let currCompany = response.data;\n                this.setState({\n                    company1: {\n                        _id: currCompany._id,\n                        company_name: currCompany.company_name,\n                        company_logo: currCompany.company_logo,\n                        company_information: currCompany.company_information,\n                        company_traits: currCompany.company_traits,\n                        company_eloscore: currCompany.company_eloscore,\n                        company_ranking: currCompany.company_ranking,\n                        past_rankings: currCompany.past_rankings\n                    }\n                });\n            })\n            .catch(function (error){\n                console.log(error);\n        })\n        axios.get('http://localhost:4000/company/' + arr[1])\n            .then(response => {\n                let currCompany = response.data;\n                this.setState({\n                    company2: {\n                        _id: currCompany._id,\n                        company_name: currCompany.company_name,\n                        company_logo: currCompany.company_logo,\n                        company_information: currCompany.company_information,\n                        company_traits: currCompany.company_traits,\n                        company_eloscore: currCompany.company_eloscore,\n                        company_ranking: currCompany.company_ranking,\n                        past_rankings: currCompany.past_rankings\n                    }\n                });\n    \n            })\n            .catch(function (error){\n                console.log(error);\n        })\n    }\n    generateRandomNumbers(min, max){\n        var id1 = this.getRandomIntInclusive(min, max);\n        var id2 = this.getRandomIntInclusive(min, max);\n        while(id1 === id2){\n            id1 = this.getRandomIntInclusive(1, max);\n            id2 = this.getRandomIntInclusive(1, max);\n        }\n        let arr = []\n        arr[0] = id1;\n        arr[1] = id2;\n        return arr;\n    }\n    getRandomIntInclusive(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \n    }\n\n    probability(r1, r2){\n        return 1.0 * 1.0 / (1 + 1.0 * Math.pow(10, 1.0 * (r1 - r2) / 400))\n    }\n\n    eloScore(aScore, bScore, K, d){\n\n        let probabilityB = this.probability(aScore, bScore);\n        let probabilityA = this.probability(bScore, aScore);\n        \n        //if company A is ranked higher\n        if(d){\n            aScore = aScore + K * (1 - probabilityA)\n            bScore = bScore + K * (0 - probabilityB)\n        }\n        //if company B is ranked higher\n        else{\n            aScore = aScore + K * (0 - probabilityA)\n            bScore = bScore + K * (1 - probabilityB)\n        }\n\n        let axiosConfig = {\n            headers: {\n                'Content-Type': 'application/json;charset=UTF-8',\n                \"Access-Control-Allow-Origin\": \"*\",\n            }\n        };\n\n        //update eloscores in db\n        let companyA = this.state.company1\n        companyA.company_eloscore = aScore;\n        console.log(companyA)\n        axios.post('http://localhost:4000/company/update/' + companyA._id,  companyA)\n        .then(res => {\n            console.log(res.data);\n        })\n        \n\n        let companyB = this.state.company2\n        companyB.company_eloscore = bScore;\n        console.log(companyB)\n        axios.post('http://localhost:4000/company/update/' + companyB._id, companyB) \n        .then((res) => {\n            console.log(res.data);\n        });\n    }\n    handleClick(d){\n        //update elo scores\n        this.eloScore(this.state.company1.company_eloscore, this.state.company2.company_eloscore, 1, d);\n\n        //get new companies\n        this.addCompanies(this.state.count);\n    }\n\n    render() {\n      return (\n          <div>\n              <Button variant=\"outlined\" color=\"secondary\" onClick={(e) => this.handleClick(true, e)}><h2>{this.state.company1.company_name}</h2></Button>\n              <Button variant=\"outlined\" color=\"secondary\" onClick={(e) => this.handleClick(false, e)}><h2>{this.state.company2.company_name}</h2></Button>\n          </div>\n      );\n    }\n}\n\nexport default Ranking",["38","39"],"/Users/nikdev/Desktop/rank/frontend/src/components/Home.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":3,"column":8,"nodeType":"46","messageId":"47","endLine":3,"endColumn":12},{"ruleId":"44","severity":1,"message":"48","line":9,"column":3,"nodeType":"46","messageId":"47","endLine":9,"endColumn":7},{"ruleId":"44","severity":1,"message":"49","line":1,"column":17,"nodeType":"46","messageId":"47","endLine":1,"endColumn":26},{"ruleId":"44","severity":1,"message":"50","line":4,"column":8,"nodeType":"46","messageId":"47","endLine":4,"endColumn":19},{"ruleId":"44","severity":1,"message":"51","line":171,"column":13,"nodeType":"46","messageId":"47","endLine":171,"endColumn":24},{"ruleId":"40","replacedBy":"52"},{"ruleId":"42","replacedBy":"53"},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Component' is defined but never used.","'NavDropdown' is defined but never used.","'axiosConfig' is assigned a value but never used.",["54"],["55"],"no-global-assign","no-unsafe-negation"]